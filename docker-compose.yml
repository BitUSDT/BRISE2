# Launch & Build a bunch containers with workers and one service for them.
version: "2"
services: 
  w_alpha: 
<<<<<<< HEAD
    build: ./worker/
=======
>>>>>>> a172c2f2a02f2cb39f5a3d8a034abf18d820792a
    container_name: w_alpha
    environment: 
      - workername=alpha
    networks: 
      worker_net: 
        aliases: 
          - alpha
    ports: 
      - "1831:8080"  # if direct access is required
    volumes: 
<<<<<<< HEAD
      - "./worker:/usr/src/app"
  w_beta: 
    build: ./worker/
=======
>>>>>>> a172c2f2a02f2cb39f5a3d8a034abf18d820792a
    container_name: w_beta
    environment: 
      - workername=beta
    networks: 
      worker_net: 
        aliases: 
          - beta
    ports: 
      - "1832:8080" # if direct access is required
    volumes: 
<<<<<<< HEAD
      - "./worker:/usr/src/app"
  w_gamma: 
    build: ./worker/
=======
>>>>>>> a172c2f2a02f2cb39f5a3d8a034abf18d820792a
    container_name: w_gamma
    environment: 
      - workername=gamma
    networks: 
      worker_net: 
        aliases: 
          - gamma
    ports: 
      - "1833:8080" # if direct access is required
    volumes: 
<<<<<<< HEAD
      - "./worker:/usr/src/app"
=======
>>>>>>> a172c2f2a02f2cb39f5a3d8a034abf18d820792a
  w_service: 
    build: ./worker_service/
    command: python3 intro.py
    stdin_open: true      
    tty: true
    container_name: w_service
    networks: 
      worker_net: 
        aliases: 
          - w_service
    ports: 
      - "80:80"
    volumes: 
      - "./worker_service:/usr/src/app"
    depends_on:
        - "w_alpha"
        - "w_beta"
        - "w_gamma"
    environment:
      - FLASK_APP=worker_service/__init__.py
      - FLASK_DEBUG=1
      - WORKER_COUNT=3 # depends of workers instance. [alpha, beta, gamma, delta]

networks: 
  worker_net: 
    driver: bridge
