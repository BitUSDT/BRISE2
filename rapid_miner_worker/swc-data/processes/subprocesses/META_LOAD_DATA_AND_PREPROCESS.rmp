<?xml version="1.0" encoding="UTF-8"?><process version="8.1.003">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="8.1.003" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="retrieve" compatibility="8.1.003" expanded="true" height="68" name="Retrieve DATASET" width="90" x="45" y="85">
        <parameter key="repository_entry" value="../../data/DATASET"/>
      </operator>
      <operator activated="true" class="subprocess" compatibility="8.1.003" expanded="true" height="82" name="PREPROCESSING" width="90" x="246" y="85">
        <process expanded="true">
          <operator activated="true" class="r_scripting:execute_r" compatibility="8.1.000" expanded="true" height="82" name="RAND_SHUFF_INV" width="90" x="112" y="34">
            <parameter key="script" value="rm_main = function(data) &#10;{ &#10;#Set Random Seed&#10;set.seed(1992)&#10;&#10;#Correction calculation Id from 0-499, 0-499 -&gt; 0-999&#10;data[24490:length(data$M_INV_ID),1] &lt;- data[24490:length(data$M_INV_ID),1] + 500 &#10;&#10;#from 0-999 -&gt; 1-1000&#10;data[1:length(data$M_INV_ID),1] &lt;- data[1:length(data$M_INV_ID),1] + 1 &#10;&#10;#Id randomly mix by calculation&#10;vec_id &lt;- unique(data$M_INV_ID)&#10;vec_id_uni &lt;- sample(vec_id, length(vec_id), replace = FALSE)&#10;&#10;#Determine number of bills&#10;inv_numb &lt;- length(vec_id)&#10;&#10;#Schema of data frame&#10;newData &lt;- as.data.frame(matrix(nrow = 0, ncol = ncol(data)))&#10;tempData &lt;- as.data.frame(matrix(nrow = 0, ncol = ncol(data)))&#10;&#10;#Column names of data frame&#10;colnames(newData) &lt;- colnames(data)&#10;colnames(tempData) &lt;- colnames(data)&#10;&#10;#Composing dataset based on randomly shuffled Id&#10;for(i in vec_id_uni){&#10;  tempData &lt;- data[data$M_INV_ID==i,]&#10;  newData &lt;- rbind(newData, tempData)   &#10;}&#10;&#10;#Add batch&#10;newData &lt;- cbind(newData, &quot;M_BATCH&quot; = 0)&#10;&#10;#Set batch values for 10-fold cross-validation&#10;for (i in 1:10){&#10;  newData[newData$M_INV_ID %in% vec_id_uni[((i)*100-100+1):(i*100)], ncol(newData)] &lt;- i&#10;}&#10;&#10;&#10;&#10;return(newData) &#10;&#10;} "/>
          </operator>
          <operator activated="true" class="select_attributes" compatibility="8.1.003" expanded="true" height="82" name="SELECT_ATT" width="90" x="313" y="34">
            <parameter key="attribute_filter_type" value="subset"/>
            <parameter key="attribute" value=""/>
            <parameter key="attributes" value="L_INDIVITEM|F10_N_LVALF_DOCH|F11_N_RVALL_DOCH|F12_N_LENCOL_DOCW|F13_N_LENWOR_DOCW|F14_N_IDROW|F15_PAGEOFINV|F1_NUMCOL|F2_NUMCOLWORD|F3_RECURVAL|F4_N_NUMLET_DOCW|F5_N_NUMDIG_DOCW|F6_N_NUMWC_DOCW|F7_N_LENROW_DOCW|F8_N_LVALF_DOCW|F9_N_RVALL_DOCW|M_BATCH"/>
            <parameter key="use_except_expression" value="false"/>
            <parameter key="value_type" value="attribute_value"/>
            <parameter key="use_value_type_exception" value="false"/>
            <parameter key="except_value_type" value="time"/>
            <parameter key="block_type" value="attribute_block"/>
            <parameter key="use_block_type_exception" value="false"/>
            <parameter key="except_block_type" value="value_matrix_row_start"/>
            <parameter key="invert_selection" value="false"/>
            <parameter key="include_special_attributes" value="false"/>
          </operator>
          <operator activated="true" class="set_role" compatibility="8.1.003" expanded="true" height="82" name="SET_ROLE" width="90" x="447" y="34">
            <parameter key="attribute_name" value="M_BATCH"/>
            <parameter key="target_role" value="batch"/>
            <list key="set_additional_roles"/>
          </operator>
          <connect from_port="in 1" to_op="RAND_SHUFF_INV" to_port="input 1"/>
          <connect from_op="RAND_SHUFF_INV" from_port="output 1" to_op="SELECT_ATT" to_port="example set input"/>
          <connect from_op="SELECT_ATT" from_port="example set output" to_op="SET_ROLE" to_port="example set input"/>
          <connect from_op="SET_ROLE" from_port="example set output" to_port="out 1"/>
          <portSpacing port="source_in 1" spacing="0"/>
          <portSpacing port="source_in 2" spacing="0"/>
          <portSpacing port="sink_out 1" spacing="0"/>
          <portSpacing port="sink_out 2" spacing="0"/>
        </process>
      </operator>
      <connect from_op="Retrieve DATASET" from_port="output" to_op="PREPROCESSING" to_port="in 1"/>
      <connect from_op="PREPROCESSING" from_port="out 1" to_port="result 1"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
    </process>
  </operator>
</process>
